# ----------------------------------------------------------------------------------------------------
# Template to deploy a pre-built Azure Function artifact to one environment
# ----------------------------------------------------------------------------------------------------
parameters: 
- name: variableGroupName
  default:  'myVariableGroup'
- name: environmentName
  default:  'DEV'

# ----------------------------------------------------------------------------------------------------
jobs:
- deployment: InitializeDeploy${{ parameters.environmentName }}Function
  displayName: Initialize Deploy ${{ parameters.environmentName }} Function
  environment: ${{ parameters.environmentName }}

- job: Deploy${{ parameters.environmentName }}Function
  displayName: Deploy ${{ parameters.environmentName }} Function

  variables:
    - group: ${{ parameters.variableGroupName }}
    - name: environmentNameUpper
      value: ${{ upper(parameters.environmentName) }}
    - name: environmentNameLower
      value: ${{ lower(parameters.environmentName) }}

  steps:
  - task: DownloadPipelineArtifact@2
    displayName: 'Download Pipeline Artifacts'
    inputs:
      artifact: functiondrop

  - bash: |
      functionAppName=$(echo "$(orgPrefix)-$(appPrefix)-$(functionName)-$(environmentNameLower)$(appSuffix)" | tr '[:upper:]' '[:lower:]')
      echo "##vso[task.setvariable variable=functionAppName]$functionAppName"
    displayName: 'Create Variables'

  - task: CmdLine@2
    inputs:
      script: |
        echo "appPrefix=$(appPrefix)"
        echo "functionName=$(functionName)"
        echo "functionAppName=$(functionAppName)"
        echo "serviceConnectionName=$(serviceConnectionName)"
        echo "environmentNameUpper=$(environmentNameUpper)"
        echo "environmentNameLower=$(environmentNameLower)"
        echo "Directory of pipeline workspace:"
        tree $(Pipeline.Workspace)
        dir $(Pipeline.Workspace) /s
    displayName: 'Display Variables and Tree'

  - task: AzureFunctionApp@1
    displayName: 'Function App Deploy'
    inputs:
      azureSubscription: $(serviceConnectionName)
      appType: functionAppLinux
      appName: $(functionAppName)
      package: '$(Pipeline.Workspace)/function-$(appPrefix)*.zip'
      AppSettings: ''
